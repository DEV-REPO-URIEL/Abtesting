// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cct.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ClientInfo;
@class IosClientInfo;
@class LogEvent;
@class LogRequest;
@class NetworkConnectionInfo;
@class QosTierConfiguration;
@class QosTiersOverride;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum NetworkConnectionInfo_NetworkType

typedef GPB_ENUM(NetworkConnectionInfo_NetworkType) {
  NetworkConnectionInfo_NetworkType_None = -1,
  NetworkConnectionInfo_NetworkType_Mobile = 0,
  NetworkConnectionInfo_NetworkType_Wifi = 1,
  NetworkConnectionInfo_NetworkType_MobileMms = 2,
  NetworkConnectionInfo_NetworkType_MobileSupl = 3,
  NetworkConnectionInfo_NetworkType_MobileDun = 4,
  NetworkConnectionInfo_NetworkType_MobileHipri = 5,
  NetworkConnectionInfo_NetworkType_Wimax = 6,
  NetworkConnectionInfo_NetworkType_Bluetooth = 7,
  NetworkConnectionInfo_NetworkType_Dummy = 8,
  NetworkConnectionInfo_NetworkType_Ethernet = 9,
  NetworkConnectionInfo_NetworkType_MobileFota = 10,
  NetworkConnectionInfo_NetworkType_MobileIms = 11,
  NetworkConnectionInfo_NetworkType_MobileCbs = 12,
  NetworkConnectionInfo_NetworkType_WifiP2P = 13,
  NetworkConnectionInfo_NetworkType_MobileIa = 14,
  NetworkConnectionInfo_NetworkType_MobileEmergency = 15,
  NetworkConnectionInfo_NetworkType_Proxy = 16,
  NetworkConnectionInfo_NetworkType_Vpn = 17,
};

GPBEnumDescriptor *NetworkConnectionInfo_NetworkType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL NetworkConnectionInfo_NetworkType_IsValidValue(int32_t value);

#pragma mark - Enum NetworkConnectionInfo_MobileSubtype

typedef GPB_ENUM(NetworkConnectionInfo_MobileSubtype) {
  NetworkConnectionInfo_MobileSubtype_UnknownMobileSubtype = 0,
  NetworkConnectionInfo_MobileSubtype_Gprs = 1,
  NetworkConnectionInfo_MobileSubtype_Edge = 2,
  NetworkConnectionInfo_MobileSubtype_Umts = 3,
  NetworkConnectionInfo_MobileSubtype_Cdma = 4,
  NetworkConnectionInfo_MobileSubtype_Evdo0 = 5,
  NetworkConnectionInfo_MobileSubtype_EvdoA = 6,
  NetworkConnectionInfo_MobileSubtype_Rtt = 7,
  NetworkConnectionInfo_MobileSubtype_Hsdpa = 8,
  NetworkConnectionInfo_MobileSubtype_Hsupa = 9,
  NetworkConnectionInfo_MobileSubtype_Hspa = 10,
  NetworkConnectionInfo_MobileSubtype_Iden = 11,
  NetworkConnectionInfo_MobileSubtype_EvdoB = 12,
  NetworkConnectionInfo_MobileSubtype_Lte = 13,
  NetworkConnectionInfo_MobileSubtype_Ehrpd = 14,
  NetworkConnectionInfo_MobileSubtype_Hspap = 15,
  NetworkConnectionInfo_MobileSubtype_Gsm = 16,
  NetworkConnectionInfo_MobileSubtype_TdScdma = 17,
  NetworkConnectionInfo_MobileSubtype_Iwlan = 18,
  NetworkConnectionInfo_MobileSubtype_LteCa = 19,

  /**
   * COMBINED has value -1 in NetworkIdentity, but is given the value
   * 100 here to save (disk) space. The value -1 takes up the full 10 bytes in
   * a varint for enums, but the value 100 only takes up 1 byte.
   **/
  NetworkConnectionInfo_MobileSubtype_Combined = 100,
};

GPBEnumDescriptor *NetworkConnectionInfo_MobileSubtype_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL NetworkConnectionInfo_MobileSubtype_IsValidValue(int32_t value);

#pragma mark - Enum ClientInfo_ClientType

typedef GPB_ENUM(ClientInfo_ClientType) {
  ClientInfo_ClientType_IosFirebase = 15,
};

GPBEnumDescriptor *ClientInfo_ClientType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ClientInfo_ClientType_IsValidValue(int32_t value);

#pragma mark - Enum QosTierConfiguration_QosTier

typedef GPB_ENUM(QosTierConfiguration_QosTier) {
  QosTierConfiguration_QosTier_Default = 0,
  QosTierConfiguration_QosTier_UnmeteredOnly = 1,
  QosTierConfiguration_QosTier_UnmeteredOrDaily = 2,
  QosTierConfiguration_QosTier_FastIfRadioAwake = 3,
  QosTierConfiguration_QosTier_Never = 4,
};

GPBEnumDescriptor *QosTierConfiguration_QosTier_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL QosTierConfiguration_QosTier_IsValidValue(int32_t value);

#pragma mark - CctRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface CctRoot : GPBRootObject
@end

#pragma mark - LogEvent

typedef GPB_ENUM(LogEvent_FieldNumber) {
  LogEvent_FieldNumber_EventTimeMs = 1,
  LogEvent_FieldNumber_SourceExtension = 6,
  LogEvent_FieldNumber_TimezoneOffsetSeconds = 15,
  LogEvent_FieldNumber_EventUptimeMs = 17,
  LogEvent_FieldNumber_NetworkConnectionInfo = 23,
};

@interface LogEvent : GPBMessage

@property(nonatomic, readwrite) int64_t eventTimeMs;

@property(nonatomic, readwrite) BOOL hasEventTimeMs;
@property(nonatomic, readwrite) int64_t eventUptimeMs;

@property(nonatomic, readwrite) BOOL hasEventUptimeMs;
@property(nonatomic, readwrite, copy, null_resettable) NSData *sourceExtension;
/** Test to see if @c sourceExtension has been set. */
@property(nonatomic, readwrite) BOOL hasSourceExtension;

@property(nonatomic, readwrite) int64_t timezoneOffsetSeconds;

@property(nonatomic, readwrite) BOOL hasTimezoneOffsetSeconds;
@property(nonatomic, readwrite, strong, null_resettable) NetworkConnectionInfo *networkConnectionInfo;
/** Test to see if @c networkConnectionInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNetworkConnectionInfo;

@end

#pragma mark - NetworkConnectionInfo

typedef GPB_ENUM(NetworkConnectionInfo_FieldNumber) {
  NetworkConnectionInfo_FieldNumber_NetworkType = 1,
  NetworkConnectionInfo_FieldNumber_MobileSubtype = 2,
};

@interface NetworkConnectionInfo : GPBMessage

@property(nonatomic, readwrite) NetworkConnectionInfo_NetworkType networkType;

@property(nonatomic, readwrite) BOOL hasNetworkType;
@property(nonatomic, readwrite) NetworkConnectionInfo_MobileSubtype mobileSubtype;

@property(nonatomic, readwrite) BOOL hasMobileSubtype;
@end

#pragma mark - IosClientInfo

typedef GPB_ENUM(IosClientInfo_FieldNumber) {
  IosClientInfo_FieldNumber_OsMajorVersion = 3,
  IosClientInfo_FieldNumber_OsFullVersion = 4,
  IosClientInfo_FieldNumber_ApplicationBuild = 5,
  IosClientInfo_FieldNumber_Country = 6,
  IosClientInfo_FieldNumber_Model = 7,
  IosClientInfo_FieldNumber_LanguageCode = 8,
  IosClientInfo_FieldNumber_ApplicationBundleId = 11,
};

@interface IosClientInfo : GPBMessage

/** The major OS version of an iOS client. Eg: "8", "9". */
@property(nonatomic, readwrite, copy, null_resettable) NSString *osMajorVersion;
/** Test to see if @c osMajorVersion has been set. */
@property(nonatomic, readwrite) BOOL hasOsMajorVersion;

/** The complete OS version of an iOS client. Eg: "8.4", "9.3". */
@property(nonatomic, readwrite, copy, null_resettable) NSString *osFullVersion;
/** Test to see if @c osFullVersion has been set. */
@property(nonatomic, readwrite) BOOL hasOsFullVersion;

/**
 * The client application build (from Core Foundation key
 * "CFBundleVersion").
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *applicationBuild;
/** Test to see if @c applicationBuild has been set. */
@property(nonatomic, readwrite) BOOL hasApplicationBuild;

/**
 * The chosen country from the client. e.g., "US", "KR", "JP".
 * This is typically populated based on the value of:
 *   [[NSLocale currentLocale] objectForKey:NSLocaleCountryCode]
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *country;
/** Test to see if @c country has been set. */
@property(nonatomic, readwrite) BOOL hasCountry;

/**
 * The unix name (uname) for the model from an iOS client. e.g., "iPhone6,1"
 * for iPhone 5s.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *model;
/** Test to see if @c model has been set. */
@property(nonatomic, readwrite) BOOL hasModel;

/**
 * The current language displayed to user. e.g., "en", "fr", "en-AU", or "de"
 * This comes from [[NSBundle mainBundle] preferredLocalizations]; and is:
 * "[language designator]" or "[language designator]-[region designator]"
 * format based off of what localization is available and displayed to user.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *languageCode;
/** Test to see if @c languageCode has been set. */
@property(nonatomic, readwrite) BOOL hasLanguageCode;

/** The bundle name of the application. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *applicationBundleId;
/** Test to see if @c applicationBundleId has been set. */
@property(nonatomic, readwrite) BOOL hasApplicationBundleId;

@end

#pragma mark - ClientInfo

typedef GPB_ENUM(ClientInfo_FieldNumber) {
  ClientInfo_FieldNumber_ClientType = 1,
  ClientInfo_FieldNumber_IosClientInfo = 4,
};

@interface ClientInfo : GPBMessage

/** The client type for this client. One of the enum values defined above. */
@property(nonatomic, readwrite) ClientInfo_ClientType clientType;

@property(nonatomic, readwrite) BOOL hasClientType;
@property(nonatomic, readwrite, strong, null_resettable) IosClientInfo *iosClientInfo;
/** Test to see if @c iosClientInfo has been set. */
@property(nonatomic, readwrite) BOOL hasIosClientInfo;

@end

#pragma mark - BatchedLogRequest

typedef GPB_ENUM(BatchedLogRequest_FieldNumber) {
  BatchedLogRequest_FieldNumber_LogRequestArray = 1,
};

@interface BatchedLogRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LogRequest*> *logRequestArray;
/** The number of items in @c logRequestArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logRequestArray_Count;

@end

#pragma mark - LogRequest

typedef GPB_ENUM(LogRequest_FieldNumber) {
  LogRequest_FieldNumber_ClientInfo = 1,
  LogRequest_FieldNumber_LogSource = 2,
  LogRequest_FieldNumber_LogEventArray = 3,
  LogRequest_FieldNumber_RequestTimeMs = 4,
  LogRequest_FieldNumber_RequestUptimeMs = 8,
  LogRequest_FieldNumber_QosTier = 9,
};

@interface LogRequest : GPBMessage

@property(nonatomic, readwrite) int64_t requestTimeMs;

@property(nonatomic, readwrite) BOOL hasRequestTimeMs;
/**
 * Current time since boot in milliseconds, including time spent in sleep,
 * according to the same clock as the one used to set
 * the 'event_uptime_ms' values in the LogEvent protos above.
 **/
@property(nonatomic, readwrite) int64_t requestUptimeMs;

@property(nonatomic, readwrite) BOOL hasRequestUptimeMs;
/** The ClientInfo at log time. */
@property(nonatomic, readwrite, strong, null_resettable) ClientInfo *clientInfo;
/** Test to see if @c clientInfo has been set. */
@property(nonatomic, readwrite) BOOL hasClientInfo;

@property(nonatomic, readwrite) int32_t logSource;

@property(nonatomic, readwrite) BOOL hasLogSource;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LogEvent*> *logEventArray;
/** The number of items in @c logEventArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logEventArray_Count;

@property(nonatomic, readwrite) QosTierConfiguration_QosTier qosTier;

@property(nonatomic, readwrite) BOOL hasQosTier;
@end

#pragma mark - QosTierConfiguration

typedef GPB_ENUM(QosTierConfiguration_FieldNumber) {
  QosTierConfiguration_FieldNumber_QosTier = 2,
  QosTierConfiguration_FieldNumber_LogSource = 3,
};

@interface QosTierConfiguration : GPBMessage

@property(nonatomic, readwrite) QosTierConfiguration_QosTier qosTier;

@property(nonatomic, readwrite) BOOL hasQosTier;
@property(nonatomic, readwrite) int32_t logSource;

@property(nonatomic, readwrite) BOOL hasLogSource;
@end

#pragma mark - QosTiersOverride

typedef GPB_ENUM(QosTiersOverride_FieldNumber) {
  QosTiersOverride_FieldNumber_QosTierConfigurationArray = 1,
  QosTiersOverride_FieldNumber_QosTierFingerprint = 2,
};

@interface QosTiersOverride : GPBMessage

/**
 * Quality of Service tiers enforced by server for overriding client
 * qos_tier setting in event logging.
 * This usually happens when server is burdened with fast qos tiers.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<QosTierConfiguration*> *qosTierConfigurationArray;
/** The number of items in @c qosTierConfigurationArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger qosTierConfigurationArray_Count;

/** The fingerprint of the qos_tier_configuration field. */
@property(nonatomic, readwrite) int64_t qosTierFingerprint;

@property(nonatomic, readwrite) BOOL hasQosTierFingerprint;
@end

#pragma mark - LogResponse

typedef GPB_ENUM(LogResponse_FieldNumber) {
  LogResponse_FieldNumber_NextRequestWaitMillis = 1,
  LogResponse_FieldNumber_QosTier = 3,
};

@interface LogResponse : GPBMessage

/**
 * Client should wait for next_request_wait_millis before sending the next
 * log request.
 **/
@property(nonatomic, readwrite) int64_t nextRequestWaitMillis;

@property(nonatomic, readwrite) BOOL hasNextRequestWaitMillis;
/**
 * Quality of Service tiers enforced by server for overriding client
 * qos_tier setting in event logging.
 **/
@property(nonatomic, readwrite, strong, null_resettable) QosTiersOverride *qosTier;
/** Test to see if @c qosTier has been set. */
@property(nonatomic, readwrite) BOOL hasQosTier;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

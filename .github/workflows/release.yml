name: release

on:
  pull_request:
    paths:
    - '.github/workflows/release.yml'
    - '.github/scripts/add_podspecs.swift'
  schedule:
    # Run every day at 11pm (PST) - cron uses UTC times
    - cron:  '0 7 * * *'

jobs:

  buildup_SpecsStaging_repo:
    # Don't run on private repo unless it is a PR.
    # if: github.repository != 'FirebasePrivate/firebase-ios-sdk' || github.event_name == 'pull_request'
    env:
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      local_repo: specsstaging
      # podspec_repo_branch: release-6.30.0
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Update SpecStaging repo setup
      run: |
        if [ -f "${HOME}/.cocoapods/repos" ]; then
          find  "${HOME}/.cocoapods/repos" -type d -maxdepth 1 -exec sh -c 'pod repo remove $(basename {})' \;
        fi
        git config --global user.email "google-oss-bot@example.com"
        git config --global user.name "google-oss-bot"
        mkdir -p /tmp/test/firebase-ios-sdk
        git clone https://github.com/firebase/firebase-ios-sdk.git /tmp/test/firebase-ios-sdk
        cd /tmp/test/firebase-ios-sdk
        git tag -a "test" -m "release testing"
        sed  -i "" "s/\s*:git.*/:git => '\/tmp\/test\/firebase-ios-sdk',/; s/\s*:tag.*/:tag => 'test'/" *.podspec
        cd "${GITHUB_WORKSPACE}/ZipBuilder"
        swift build
        # ./.build/debug/firebase-pod-updater --git-root "${GITHUB_WORKSPACE}/firebase-ios-sdk" --releasing-pods "${GITHUB_WORKSPACE}/scripts/create_spec_repo/firebase_sdk.textproto"
    - name: Update SpecStaging repo
      run: |
        botaccess=`cat bot-access.txt`
        pod repo add --silent "${local_repo}" https://"$botaccess"@github.com/firebase/SpecsStaging.git
        BOT_TOKEN="${botaccess}" SPEC_REPO="specsstaging" scripts/create_spec_repo/add_podspecs.swift firebase-ios-sdk/
    - name: Clean Artifacts
      if: ${{ always() }}
      run: |
        pod repo remove "${local_repo}"
        rm -rf bot-access.txt
    - uses: actions/upload-artifact@v2
      with:
        name: firebase-ios-sdk
        path: /tmp/test/firebase-ios-sdk

  quickstart_release_test:
    # Don't run on private repo unless it is a PR.
    if: github.repository != 'FirebasePrivate/firebase-ios-sdk' || github.event_name == 'pull_request'
    needs: buildup_SpecsStaging_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      testing_repo: "firebase-ios-sdk"
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get testing podspec repo
      uses: actions/download-artifact@v1
      with:
        name: firebase-ios-sdk
    - name: Move repo
      run: |
        mkdir -p /tmp/test/
        mv "${GITHUB_WORKSPACE}/${testing_repo}" /tmp/test/
        # find "${GITHUB_WORKSPACE}/${testing_repo}" -name "*.zip" -maxdepth 3 -exec unzip -d /tmp/test/ {} +
        ls /tmp/test/
    - name: Setup quickstart
      run: scripts/setup_quickstart.sh config release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-config.plist.gpg \
          quickstart-ios/config/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test Swift Quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Config)
    - name: Remove data before upload
      run: scripts/remove_data.sh config
    - uses: actions/upload-artifact@v2
      with:
        name: test-repo
        path: /tmp/test/
    - uses: actions/upload-artifact@v2
      with:
        name: quickstart_artifacts_config
        path: quickstart-ios/
